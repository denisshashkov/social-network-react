{"version":3,"file":"static/js/486.5c9a95f5.chunk.js","mappings":"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","sources":["webpack://social-network-react/./src/components/MyPosts/Post/post.module.scss?2805","components/MyPosts/Post/Post.jsx","components/Forms/AddPostForm.jsx","webpack://social-network-react/./src/components/MyPosts/myPosts.module.scss?0d8a","components/MyPosts/MyPosts.jsx","components/MyPosts/MyPostsContainer.jsx","webpack://social-network-react/./src/components/Profile/profile.module.scss?2ec1","webpack://social-network-react/./src/components/Profile/ProfileInfo/profileStatus.module.scss?741d","components/Profile/ProfileInfo/ProfileStatus.jsx","webpack://social-network-react/./src/components/Profile/ProfileInfo/profileInfo.module.scss?4a1b","components/Profile/ProfileInfo/ProfileData.jsx","components/Forms/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","redux/profileSelectors.js","components/Profile/ProfileContainer.jsx","webpack://social-network-react/./src/components/Forms/formStyles.module.scss?d171"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"post_item__iXJ9g\",\"item__left\":\"post_item__left__qjASD\",\"item__avatar\":\"post_item__avatar__QkYWl\"};","import React from \"react\";\r\nimport Button from \"../../UI/button/Button\";\r\nimport classes from \"./post.module.scss\";\r\n\r\nconst Post = ({ message, likeCount }) => {\r\n  return (\r\n    <div className={classes.item}>\r\n      <div className={classes.item__left}>\r\n        <img\r\n          className={classes.item__avatar}\r\n          src=\"https://image.shutterstock.com/z/stock-vector-asian-boy-smiling-male-avatar-cartoon-guy-character-facial-expression-smile-vector-illustration-625960208.jpg\"\r\n          alt=\"\"\r\n        />\r\n        <div>\r\n          <Button>{likeCount}</Button>\r\n        </div>\r\n      </div>\r\n\r\n      <span>{message}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Button from \"../UI/button/Button\";\r\nimport classes from \"./formStyles.module.scss\";\r\n\r\nconst validationsSchema = Yup.object().shape({\r\n  post: Yup.string().min(2, \"Too Short!\").max(50, \"Max length 50 symbols!\"),\r\n});\r\n\r\nconst AddPostForm = ({ submitHandler }) => {\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{ id: Date.now(), post: \"\", likeCount: 0 }}\r\n        onSubmit={submitHandler}\r\n        validationSchema={validationsSchema}\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form>\r\n            <Field\r\n              className={\r\n                errors.post && touched.post ? classes.error__border : null\r\n              }\r\n              placeholder=\"Enter your post\"\r\n              name=\"post\"\r\n              component=\"textarea\"\r\n            />\r\n            {errors.post && touched.post ? (\r\n              <p className={classes.error}>{errors.post}</p>\r\n            ) : null}\r\n            <div>\r\n              <Button type=\"submit\">Add post</Button>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddPostForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"myPosts_posts__gxSdg\",\"posts__items\":\"myPosts_posts__items__LQ-VJ\",\"posts__items__items\":\"myPosts_posts__items__items__jcE4m\"};","import React from \"react\";\r\nimport Post from \"./Post/Post\";\r\nimport AddPostForm from \"../Forms/AddPostForm\";\r\nimport classes from \"./myPosts.module.scss\";\r\n\r\nconst Myposts = (props) => {\r\n  let state = props.profilePage;\r\n  const items = state.posts.map((post) => (\r\n    <Post likeCount={post.likeCount} message={post.post} key={post.id} />\r\n  ));\r\n\r\n  const addPostHandler = (post, submitProps) => {\r\n    props.addPost(post);\r\n    submitProps.resetForm();\r\n  };\r\n\r\n  return (\r\n    <div className={classes.posts}>\r\n      <AddPostForm submitHandler={addPostHandler} />\r\n      <div className={classes.posts__items}>{items}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Myposts;\r\n","import MyPosts from \"./MyPosts\";\r\nimport { addPostActionCreator } from \"../../redux/profileReducer.ts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profilePage: state.profilePage,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (post) => {\r\n      dispatch(addPostActionCreator(post));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"profile__cover\":\"profile_profile__cover__DWoy9\"};","// extracted by mini-css-extract-plugin\nexport default {\"profile__status\":\"profileStatus_profile__status__40NyL\"};","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport classes from \"./profileStatus.module.scss\";\r\n\r\nconst ProfileStatus = (props) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [status, setStatus] = useState(props.status);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const editModeHandler = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditModeHandler = () => {\r\n    setEditMode(false);\r\n    dispatch(props.updateStatus(status));\r\n  };\r\n\r\n  const statusChangeHandler = (e) => {\r\n    let statusValue = e.target.value;\r\n    setStatus(statusValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.profile__status}>\r\n      {!editMode ? (\r\n        <div>\r\n          <span onClick={editModeHandler}>\r\n            Status: {props.status || \"Add status\"}\r\n          </span>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <input\r\n            onBlur={deactivateEditModeHandler}\r\n            autoFocus={true}\r\n            onChange={statusChangeHandler}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatus;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"info__wrapper\":\"profileInfo_info__wrapper__0w15M\",\"profile__info\":\"profileInfo_profile__info__TR-WL\",\"profile__info__description\":\"profileInfo_profile__info__description__3LFCO\",\"profile__info__photo\":\"profileInfo_profile__info__photo__hMZqb\",\"input__file\":\"profileInfo_input__file__VL18Q\",\"input__file__label\":\"profileInfo_input__file__label__KiAme\",\"profile__data\":\"profileInfo_profile__data__2H6tm\",\"profile__data__item\":\"profileInfo_profile__data__item__F-BlK\"};","import React from \"react\";\r\nimport Button from \"../../UI/button/Button\";\r\nimport classes from \"./profileInfo.module.scss\";\r\n\r\nfunction ProfileData({ profile, owner, editModeHandler }) {\r\n  const activateEditMode = () => {\r\n    editModeHandler();\r\n  };\r\n  return (\r\n    <div>\r\n      <div className={classes.profile__data__item}>\r\n        <b>Full Name: {profile.fullName}</b>\r\n      </div>\r\n      <div className={classes.profile__data__item}>\r\n        <b>Looking for a job: {profile.lookingForAJob ? \"Yes\" : \"No\"}</b>\r\n      </div>\r\n      <div className={classes.profile__data__item}>\r\n        <b>About me: {profile.aboutMe}</b>\r\n      </div>\r\n      <div className={classes.profile__data__item}>\r\n        {profile.lookingForAJob && (\r\n          <b>Skills: {profile.lookingForAJobDescription}</b>\r\n        )}\r\n      </div>\r\n      {owner && <Button onClick={activateEditMode}>Edit</Button>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileData;\r\n","import React from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Button from \"../UI/button/Button\";\r\nimport classes from \"./formStyles.module.scss\";\r\n\r\nconst ProfileDataForm = ({ submitHandler, profile }) => {\r\n  const validationsSchema = Yup.object().shape({\r\n    fullName: Yup.string()\r\n      .min(2, \"Too Short!\")\r\n      .max(20, \"Too Long!\")\r\n      .required(\"Required field\"),\r\n    aboutMe: Yup.string().min(2, \"Too Short!\").max(100, \"Too Long!\"),\r\n    lookingForAJobDescription: Yup.string()\r\n      .min(2, \"Too Short!\")\r\n      .max(100, \"Too Long!\"),\r\n  });\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{\r\n          fullName: profile.fullName,\r\n          lookingForAJob: false,\r\n          aboutMe: profile.aboutMe,\r\n          lookingForAJobDescription: profile.lookingForAJobDescription,\r\n        }}\r\n        onSubmit={submitHandler}\r\n        validationSchema={validationsSchema}\r\n      >\r\n        {({ errors, touched, status }) => (\r\n          <Form>\r\n            <label>Full Name</label>\r\n            <div className={classes.input__wrapper}>\r\n              <Field\r\n                name={\"fullName\"}\r\n                className={\r\n                  errors.fullName && touched.fullName\r\n                    ? classes.error__border\r\n                    : null\r\n                }\r\n              />\r\n            </div>\r\n            {errors.fullName && touched.fullName ? (\r\n              <p className={classes.error}>{errors.fullName}</p>\r\n            ) : null}\r\n            <div className={classes.checkbox__wrapper}>\r\n              <Field\r\n                type={\"checkbox\"}\r\n                name={\"lookingForAJob\"}\r\n                className={classes.checkbox}\r\n              />\r\n              Looking for a job\r\n            </div>\r\n            <label>About me</label>\r\n            <div>\r\n              <Field\r\n                component=\"textarea\"\r\n                name={\"aboutMe\"}\r\n                className={\r\n                  errors.aboutMe && touched.aboutMe\r\n                    ? classes.error__border\r\n                    : null\r\n                }\r\n              />\r\n            </div>\r\n            {errors.aboutMe && touched.aboutMe ? (\r\n              <p className={classes.error}>{errors.aboutMe}</p>\r\n            ) : null}\r\n            <label>Skills</label>\r\n            <div>\r\n              <Field\r\n                component=\"textarea\"\r\n                name={\"lookingForAJobDescription\"}\r\n                className={\r\n                  errors.lookingForAJobDescription &&\r\n                  touched.lookingForAJobDescription\r\n                    ? classes.error__border\r\n                    : null\r\n                }\r\n              />\r\n            </div>\r\n            {errors.lookingForAJobDescription &&\r\n            touched.lookingForAJobDescription ? (\r\n              <p className={classes.error}>\r\n                {errors.lookingForAJobDescription}\r\n              </p>\r\n            ) : null}\r\n            {status ? <p className={classes.error}>{status.error}</p> : null}\r\n            <div>\r\n              <Button type=\"submit\">Save</Button>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileDataForm;\r\n","import React, { useState } from \"react\";\r\nimport PreLoader from \"../../common/preloader/PreLoader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport avatar from \"../../../assets/image/user.png\";\r\nimport classes from \"./profileInfo.module.scss\";\r\nimport ProfileData from \"./ProfileData\";\r\nimport ProfileDataForm from \"../../Forms/ProfileDataForm\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst ProfileInfo = ({\r\n  profile,\r\n  status,\r\n  updateStatus,\r\n  owner,\r\n  savePhoto,\r\n  saveData,\r\n}) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const editModeHandler = () => {\r\n    setEditMode(true);\r\n  };\r\n  const choiseAvatarHandler = (e) => {\r\n    dispatch(savePhoto(e.target.files[0]));\r\n  };\r\n\r\n  const submitHandler = (formData, submitProps) => {\r\n    dispatch(saveData(formData, submitProps.setStatus));\r\n    setEditMode(false);\r\n  };\r\n\r\n  if (!profile) {\r\n    return <PreLoader />;\r\n  }\r\n  return (\r\n    <div className={classes.info__wrapper}>\r\n      <div className={classes.profile__info}>\r\n        <img\r\n          className={classes.profile__info__photo}\r\n          src={profile.photos.large || avatar}\r\n          alt=\"No Avatar\"\r\n        />\r\n        {owner && (\r\n          <label htmlFor=\"input__file\" className={classes.input__file__label}>\r\n            <input\r\n              type={\"file\"}\r\n              id=\"input__file\"\r\n              className={classes.input__file}\r\n              onChange={choiseAvatarHandler}\r\n            />\r\n            Upload image\r\n          </label>\r\n        )}\r\n      </div>\r\n      <div className={classes.profile__data}>\r\n        <ProfileStatus status={status} updateStatus={updateStatus} />\r\n        {editMode ? (\r\n          <ProfileDataForm profile={profile} submitHandler={submitHandler} />\r\n        ) : (\r\n          <ProfileData\r\n            profile={profile}\r\n            owner={owner}\r\n            editModeHandler={editModeHandler}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport MyPostsContainer from \"../MyPosts/MyPostsContainer\";\r\nimport classes from \"./profile.module.scss\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = ({\r\n  profile,\r\n  status,\r\n  updateStatus,\r\n  owner,\r\n  savePhoto,\r\n  saveData,\r\n}) => {\r\n  return (\r\n    <main className={classes.profile}>\r\n      <div className={classes.profile__cover}>\r\n        <ProfileInfo\r\n          profile={profile}\r\n          status={status}\r\n          updateStatus={updateStatus}\r\n          owner={owner}\r\n          savePhoto={savePhoto}\r\n          saveData={saveData}\r\n        />\r\n      </div>\r\n      <MyPostsContainer />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","export const getProfile = (state) => {\r\n  return state.profilePage.profile;\r\n};\r\n\r\nexport const getStatus = (state) => {\r\n  return state.profilePage.status;\r\n};\r\n\r\nexport const getAuthorizedUserId = (state) => {\r\n  return state.auth.id;\r\n};\r\n\r\nexport const getIsAuth = (state) => {\r\n  return state.auth.isAuth;\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { useMatch } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport {\r\n  getProfile,\r\n  getStatus,\r\n  getAuthorizedUserId,\r\n  getIsAuth,\r\n} from \"../../redux/profileSelectors\";\r\nimport {\r\n  getProfileThunkCreator,\r\n  getProfileStatusThunkCreator,\r\n  updateProfileStatusThunkCreator,\r\n  savePhotoThunkCreator,\r\n  saveDataThunkCreator,\r\n} from \"../../redux/profileReducer.ts\";\r\n\r\nconst ProfileContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const profile = useSelector(getProfile);\r\n  const status = useSelector(getStatus);\r\n  const authorizedUserId = useSelector(getAuthorizedUserId);\r\n  const isAuth = useSelector(getIsAuth);\r\n  const match = useMatch(\"/profile/:userId/\");\r\n  const userId = match ? match.params.userId : authorizedUserId;\r\n\r\n  useEffect(() => {\r\n    if (isAuth || match) {\r\n      dispatch(getProfileThunkCreator(userId));\r\n      dispatch(getProfileStatusThunkCreator(userId));\r\n    }\r\n  }, [userId]);\r\n\r\n  if (!isAuth) return <Navigate to={\"/login\"} />;\r\n  return (\r\n    <Profile\r\n      owner={match === null}\r\n      profile={profile}\r\n      status={status}\r\n      updateStatus={updateProfileStatusThunkCreator}\r\n      savePhoto={savePhotoThunkCreator}\r\n      saveData={saveDataThunkCreator}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProfileContainer;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"error\":\"formStyles_error__e9G6r\",\"error__border\":\"formStyles_error__border__70zrh\",\"checkbox\":\"formStyles_checkbox__n5IBE\",\"checkbox__wrapper\":\"formStyles_checkbox__wrapper__Eq9xh\",\"input__wrapper\":\"formStyles_input__wrapper__YBA90\"};"],"names":["message","likeCount","className","classes","src","alt","Button","validationsSchema","Yup","shape","post","min","max","submitHandler","initialValues","id","Date","now","onSubmit","validationSchema","errors","touched","placeholder","name","component","type","props","items","profilePage","posts","map","submitProps","addPost","resetForm","connect","state","newPostText","dispatch","addPostActionCreator","MyPosts","useState","editMode","setEditMode","status","setStatus","useDispatch","useEffect","onBlur","updateStatus","autoFocus","onChange","e","statusValue","target","value","onClick","profile","owner","editModeHandler","fullName","lookingForAJob","aboutMe","lookingForAJobDescription","required","error","savePhoto","saveData","photos","large","avatar","htmlFor","files","formData","PreLoader","getProfile","getStatus","getAuthorizedUserId","auth","getIsAuth","isAuth","useSelector","authorizedUserId","match","useMatch","userId","params","getProfileThunkCreator","getProfileStatusThunkCreator","updateProfileStatusThunkCreator","savePhotoThunkCreator","saveDataThunkCreator","to"],"sourceRoot":""}
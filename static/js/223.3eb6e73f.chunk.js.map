{"version":3,"file":"static/js/223.3eb6e73f.chunk.js","mappings":"qPA2FA,EArFkB,SAAC,GAAgC,IAA9BA,EAA6B,EAA7BA,cAAeC,EAAc,EAAdA,QAC5BC,EAAoBC,EAAAA,KAAaC,MAAM,CAC3CC,MAAOF,EAAAA,KAAaG,SAAS,kBAC7BC,SAAUJ,EAAAA,KAAaG,SAAS,oBAGlC,OACE,0BACE,SAAC,KAAD,CACEE,cAAe,CACbH,MAAO,GACPE,SAAU,GACVE,YAAY,EACZR,QAAS,IAEXS,SAAUV,EACVW,iBAAkBT,EARpB,SAUG,gBAAGU,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,OAApB,OACC,UAAC,KAAD,YACE,kBAAOC,QAAQ,QAAf,oBACA,gBAAKC,UAAWC,EAAAA,EAAAA,eAAhB,UACE,SAAC,KAAD,CACEC,YAAa,QACbC,KAAM,QACNH,UACEJ,EAAOP,OAASQ,EAAQR,MAAQY,EAAAA,EAAAA,cAAwB,SAI7DL,EAAOP,OAASQ,EAAQR,OACvB,cAAGW,UAAWC,EAAAA,EAAAA,MAAd,SAA8BL,EAAOP,QACnC,MACJ,kBAAOU,QAAQ,WAAf,uBACA,gBAAKC,UAAWC,EAAAA,EAAAA,eAAhB,UACE,SAAC,KAAD,CACEC,YAAa,WACbE,KAAM,WACND,KAAM,WACNH,UACEJ,EAAOL,UAAYM,EAAQN,SACvBU,EAAAA,EAAAA,cACA,SAITL,EAAOL,UAAYM,EAAQN,UAC1B,cAAGS,UAAWC,EAAAA,EAAAA,MAAd,SAA8BL,EAAOL,WACnC,MACJ,iBAAKS,UAAWC,EAAAA,EAAAA,kBAAhB,WACE,SAAC,KAAD,CACEG,KAAM,WACND,KAAM,aACNH,UAAWC,EAAAA,EAAAA,WAJf,iBASChB,IAAW,gBAAKoB,IAAKpB,EAASqB,IAAI,YAClCrB,IACC,0BACE,SAAC,KAAD,CACEiB,YAAa,yBACbC,KAAM,UACNH,UACEJ,EAAOX,SAAWY,EAAQZ,QACtBgB,EAAAA,EAAAA,cACA,SAMXH,GAAS,cAAGE,UAAWC,EAAAA,EAAAA,MAAd,SAA8BH,EAAOS,QAAa,MAE5D,0BACE,SAACC,EAAA,EAAD,CAAQJ,KAAK,SAAb,+B,oBCjFd,EAAwB,qBCqCxB,GAAeK,EAAAA,EAAAA,KALS,SAACC,GAAD,MAAY,CAClCC,OAAQD,EAAME,KAAKD,OACnB1B,QAASyB,EAAME,KAAK3B,WAGkB,CAAE4B,qBAAAA,EAAAA,IAA1C,EA/Bc,SAAC,GAA+C,IAA7CF,EAA4C,EAA5CA,OAAQE,EAAoC,EAApCA,qBAAsB5B,EAAc,EAAdA,QAc7C,OAAI0B,GACK,SAAC,KAAD,CAAUG,SAAO,EAACC,GAAG,cAI5B,iBAAKf,UAAWC,EAAhB,WACE,mCACA,SAAC,EAAD,CAAWjB,cApBO,SAAC,EAErBgC,GACI,IAFF3B,EAEC,EAFDA,MAAOE,EAEN,EAFMA,SAAUE,EAEhB,EAFgBA,WAAYR,EAE5B,EAF4BA,QAG/B4B,EACExB,EACAE,EACAE,EACAuB,EAAYC,UACZhC,IAWyCA,QAASA,W,mBC3BxD,KAAgB,MAAQ,0BAA0B,cAAgB,kCAAkC,SAAW,6BAA6B,kBAAoB,sCAAsC,eAAiB","sources":["components/Forms/LoginForm.jsx","webpack://social-network-react/./src/components/Login/login.module.scss?7457","components/Login/Login.jsx","webpack://social-network-react/./src/components/Forms/formStyles.module.scss?d171"],"sourcesContent":["import React from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Button from \"../UI/button/Button\";\r\nimport classes from \"./formStyles.module.scss\";\r\n\r\nconst LoginForm = ({ submitHandler, captcha }) => {\r\n  const validationsSchema = Yup.object().shape({\r\n    email: Yup.string().required(\"Required field\"),\r\n    password: Yup.string().required(\"Required field\"),\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{\r\n          email: \"\",\r\n          password: \"\",\r\n          rememberMe: false,\r\n          captcha: \"\",\r\n        }}\r\n        onSubmit={submitHandler}\r\n        validationSchema={validationsSchema}\r\n      >\r\n        {({ errors, touched, status }) => (\r\n          <Form>\r\n            <label htmlFor=\"email\">Email</label>\r\n            <div className={classes.input__wrapper}>\r\n              <Field\r\n                placeholder={\"Email\"}\r\n                name={\"email\"}\r\n                className={\r\n                  errors.email && touched.email ? classes.error__border : null\r\n                }\r\n              />\r\n            </div>\r\n            {errors.email && touched.email ? (\r\n              <p className={classes.error}>{errors.email}</p>\r\n            ) : null}\r\n            <label htmlFor=\"password\">Password</label>\r\n            <div className={classes.input__wrapper}>\r\n              <Field\r\n                placeholder={\"Password\"}\r\n                type={\"password\"}\r\n                name={\"password\"}\r\n                className={\r\n                  errors.password && touched.password\r\n                    ? classes.error__border\r\n                    : null\r\n                }\r\n              />\r\n            </div>\r\n            {errors.password && touched.password ? (\r\n              <p className={classes.error}>{errors.password}</p>\r\n            ) : null}\r\n            <div className={classes.checkbox__wrapper}>\r\n              <Field\r\n                type={\"checkbox\"}\r\n                name={\"rememberMe\"}\r\n                className={classes.checkbox}\r\n              />\r\n              Remember me\r\n            </div>\r\n\r\n            {captcha && <img src={captcha} alt=\"captcha\" />}\r\n            {captcha && (\r\n              <div>\r\n                <Field\r\n                  placeholder={\"Insert captcha symbols\"}\r\n                  name={\"captcha\"}\r\n                  className={\r\n                    errors.captcha && touched.captcha\r\n                      ? classes.error__border\r\n                      : null\r\n                  }\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            {status ? <p className={classes.error}>{status.error}</p> : null}\r\n\r\n            <div>\r\n              <Button type=\"submit\">Submit</Button>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"login\":\"login_login__oufDz\"};","import { connect } from \"react-redux\";\r\nimport React from \"react\";\r\nimport LoginForm from \"../Forms/LoginForm\";\r\nimport { setLoginThunkCreator } from \"../../redux/authReducer.ts\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport classes from \"./login.module.scss\";\r\n\r\nconst Login = ({ isAuth, setLoginThunkCreator, captcha }) => {\r\n  const submitHandler = (\r\n    { email, password, rememberMe, captcha },\r\n    submitProps\r\n  ) => {\r\n    setLoginThunkCreator(\r\n      email,\r\n      password,\r\n      rememberMe,\r\n      submitProps.setStatus,\r\n      captcha\r\n    );\r\n  };\r\n\r\n  if (isAuth) {\r\n    return <Navigate replace to=\"/profile\" />;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.login}>\r\n      <h1>Login</h1>\r\n      <LoginForm submitHandler={submitHandler} captcha={captcha} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  captcha: state.auth.captcha,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setLoginThunkCreator })(Login);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"error\":\"formStyles_error__e9G6r\",\"error__border\":\"formStyles_error__border__70zrh\",\"checkbox\":\"formStyles_checkbox__n5IBE\",\"checkbox__wrapper\":\"formStyles_checkbox__wrapper__Eq9xh\",\"input__wrapper\":\"formStyles_input__wrapper__YBA90\"};"],"names":["submitHandler","captcha","validationsSchema","Yup","shape","email","required","password","initialValues","rememberMe","onSubmit","validationSchema","errors","touched","status","htmlFor","className","classes","placeholder","name","type","src","alt","error","Button","connect","state","isAuth","auth","setLoginThunkCreator","replace","to","submitProps","setStatus"],"sourceRoot":""}
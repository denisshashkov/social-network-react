{"version":3,"file":"static/js/289.7f5af42a.chunk.js","mappings":"4OAgEA,EA3DkB,SAAC,GAAuB,IAArBA,EAAoB,EAApBA,cACbC,EAAoBC,EAAAA,KAAaC,MAAM,CAC3CC,MAAOF,EAAAA,KAAaG,SAAS,kBAC7BC,SAAUJ,EAAAA,KAAaG,SAAS,oBAGlC,OACE,0BACE,SAAC,KAAD,CACEE,cAAe,CAAEH,MAAO,GAAIE,SAAU,GAAIE,YAAY,GACtDC,SAAUT,EACVU,iBAAkBT,EAHpB,SAKG,gBAAGU,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,OAApB,OACC,UAAC,KAAD,YACE,0BACE,SAAC,KAAD,CACEC,YAAa,QACbC,KAAM,QACNC,UACEL,EAAOP,OAASQ,EAAQR,MAAQa,EAAAA,EAAAA,cAAwB,SAI7DN,EAAOP,OAASQ,EAAQR,OACvB,cAAGY,UAAWC,EAAAA,EAAAA,MAAd,SAA8BN,EAAOP,QACnC,MACJ,0BACE,SAAC,KAAD,CACEU,YAAa,WACbI,KAAM,WACNH,KAAM,WACNC,UACEL,EAAOL,UAAYM,EAAQN,SACvBW,EAAAA,EAAAA,cACA,SAITN,EAAOL,UAAYM,EAAQN,UAC1B,cAAGU,UAAWC,EAAAA,EAAAA,MAAd,SAA8BN,EAAOL,WACnC,MACJ,4BACE,SAAC,KAAD,CAAOY,KAAM,WAAYH,KAAM,eADjC,iBAKCF,GAAS,cAAGG,UAAWC,EAAAA,EAAAA,MAAd,SAA8BJ,EAAOM,QAAa,MAE5D,0BACE,mBAAQD,KAAK,SAAb,+B,oBC5Bd,GAAeE,EAAAA,EAAAA,KAJS,SAACC,GAAD,MAAY,CAClCC,OAAQD,EAAME,KAAKD,UAGmB,CAAEE,qBAAAA,EAAAA,IAA1C,EArBc,SAAC,GAAsC,IAApCF,EAAmC,EAAnCA,OAAQE,EAA2B,EAA3BA,qBAKvB,OAAIF,GACK,SAAC,KAAD,CAAUG,SAAO,EAACC,GAAG,cAI5B,4BACE,mCACA,SAAC,EAAD,CAAW1B,cAXO,SAAC,EAAiC2B,GAAiB,IAAhDvB,EAA+C,EAA/CA,MAAOE,EAAwC,EAAxCA,SAAUE,EAA8B,EAA9BA,WACxCgB,EAAqBpB,EAAOE,EAAUE,EAAYmB,EAAYC,qB,mBCPlE,KAAgB,MAAQ,0BAA0B,cAAgB","sources":["components/Forms/LoginForm.jsx","components/Login/Login.jsx","webpack://social-network-react/./src/components/Forms/formStyles.module.scss?d171"],"sourcesContent":["import React from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport classes from \"./formStyles.module.scss\";\r\n\r\nconst LoginForm = ({ submitHandler }) => {\r\n  const validationsSchema = Yup.object().shape({\r\n    email: Yup.string().required(\"Required field\"),\r\n    password: Yup.string().required(\"Required field\"),\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{ email: \"\", password: \"\", rememberMe: false }}\r\n        onSubmit={submitHandler}\r\n        validationSchema={validationsSchema}\r\n      >\r\n        {({ errors, touched, status }) => (\r\n          <Form>\r\n            <div>\r\n              <Field\r\n                placeholder={\"Email\"}\r\n                name={\"email\"}\r\n                className={\r\n                  errors.email && touched.email ? classes.error__border : null\r\n                }\r\n              />\r\n            </div>\r\n            {errors.email && touched.email ? (\r\n              <p className={classes.error}>{errors.email}</p>\r\n            ) : null}\r\n            <div>\r\n              <Field\r\n                placeholder={\"Password\"}\r\n                type={\"password\"}\r\n                name={\"password\"}\r\n                className={\r\n                  errors.password && touched.password\r\n                    ? classes.error__border\r\n                    : null\r\n                }\r\n              />\r\n            </div>\r\n            {errors.password && touched.password ? (\r\n              <p className={classes.error}>{errors.password}</p>\r\n            ) : null}\r\n            <div>\r\n              <Field type={\"checkbox\"} name={\"rememberMe\"} />\r\n              Remember me\r\n            </div>\r\n\r\n            {status ? <p className={classes.error}>{status.error}</p> : null}\r\n\r\n            <div>\r\n              <button type=\"submit\">Submit</button>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import { connect } from \"react-redux\";\r\nimport React from \"react\";\r\nimport LoginForm from \"../Forms/LoginForm\";\r\nimport { setLoginThunkCreator } from \"../../redux/authReducer\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nconst Login = ({ isAuth, setLoginThunkCreator }) => {\r\n  const submitHandler = ({ email, password, rememberMe }, submitProps) => {\r\n    setLoginThunkCreator(email, password, rememberMe, submitProps.setStatus);\r\n  };\r\n\r\n  if (isAuth) {\r\n    return <Navigate replace to=\"/profile\" />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Login</h1>\r\n      <LoginForm submitHandler={submitHandler} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setLoginThunkCreator })(Login);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"error\":\"formStyles_error__e9G6r\",\"error__border\":\"formStyles_error__border__70zrh\"};"],"names":["submitHandler","validationsSchema","Yup","shape","email","required","password","initialValues","rememberMe","onSubmit","validationSchema","errors","touched","status","placeholder","name","className","classes","type","error","connect","state","isAuth","auth","setLoginThunkCreator","replace","to","submitProps","setStatus"],"sourceRoot":""}
{"version":3,"file":"static/js/65.242c3aef.chunk.js","mappings":"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","sources":["webpack://social-network-react/./src/components/MyPosts/Post/post.module.scss?2805","components/MyPosts/Post/Post.jsx","components/Forms/AddPostForm.jsx","webpack://social-network-react/./src/components/MyPosts/myPosts.module.scss?0d8a","components/MyPosts/MyPosts.jsx","components/MyPosts/MyPostsContainer.jsx","webpack://social-network-react/./src/components/Profile/profile.module.scss?2ec1","webpack://social-network-react/./src/components/Profile/ProfileInfo/profileStatus.module.scss?741d","components/Profile/ProfileInfo/ProfileStatus.jsx","webpack://social-network-react/./src/components/Profile/ProfileInfo/profileInfo.module.scss?4a1b","components/Profile/ProfileInfo/ProfileData.jsx","components/Forms/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/authNavigate.js","webpack://social-network-react/./src/components/Forms/formStyles.module.scss?d171"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"post_item__iXJ9g\",\"item__avatar\":\"post_item__avatar__QkYWl\"};","import React from \"react\";\r\nimport classes from \"./post.module.scss\";\r\n\r\nconst Post = ({ message, likeCount }) => {\r\n  return (\r\n    <div className={classes.item}>\r\n      <img\r\n        className={classes.item__avatar}\r\n        src=\"https://image.shutterstock.com/z/stock-vector-asian-boy-smiling-male-avatar-cartoon-guy-character-facial-expression-smile-vector-illustration-625960208.jpg\"\r\n        alt=\"\"\r\n      />\r\n      {message}\r\n      <div>\r\n        <button>{likeCount}</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport classes from \"./formStyles.module.scss\";\r\n\r\nconst validationsSchema = Yup.object().shape({\r\n  post: Yup.string().min(2, \"Too Short!\").max(50, \"Max length 50 symbols!\"),\r\n});\r\n\r\nconst AddPostForm = ({ submitHandler }) => {\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{ id: Date.now(), post: \"\", likeCount: 0 }}\r\n        onSubmit={submitHandler}\r\n        validationSchema={validationsSchema}\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form>\r\n            <Field\r\n              className={\r\n                errors.post && touched.post ? classes.error__border : null\r\n              }\r\n              placeholder=\"Enter your post\"\r\n              name=\"post\"\r\n              component=\"textarea\"\r\n            />\r\n            {errors.post && touched.post ? (\r\n              <p className={classes.error}>{errors.post}</p>\r\n            ) : null}\r\n            <div>\r\n              <button type=\"submit\">Add post</button>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddPostForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"myPosts_posts__gxSdg\"};","import React from \"react\";\r\nimport Post from \"./Post/Post\";\r\nimport AddPostForm from \"../Forms/AddPostForm\";\r\nimport classes from \"./myPosts.module.scss\";\r\n\r\nconst Myposts = (props) => {\r\n  let state = props.profilePage;\r\n  const items = state.posts.map((post) => (\r\n    <Post likeCount={post.likeCount} message={post.post} key={post.id} />\r\n  ));\r\n\r\n  const addPostHandler = (post, submitProps) => {\r\n    props.addPost(post);\r\n    submitProps.resetForm();\r\n  };\r\n\r\n  return (\r\n    <div className={classes.posts}>\r\n      <AddPostForm submitHandler={addPostHandler} />\r\n      <div className={classes.posts}>{items}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Myposts;\r\n","import MyPosts from \"./MyPosts\";\r\nimport { addPostActionCreator } from \"../../redux/profileReducer\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profilePage: state.profilePage,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (post) => {\r\n      dispatch(addPostActionCreator(post));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"profile__cover\":\"profile_profile__cover__DWoy9\"};","// extracted by mini-css-extract-plugin\nexport default {\"profile__status\":\"profileStatus_profile__status__40NyL\"};","import React, { useEffect, useState } from \"react\";\r\nimport classes from \"./profileStatus.module.scss\";\r\n\r\nconst ProfileStatus = (props) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [status, setStatus] = useState(props.status);\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const editModeHandler = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditModeHandler = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const statusChangeHandler = (e) => {\r\n    let statusValue = e.target.value;\r\n    setStatus(statusValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.profile__status}>\r\n      {!editMode ? (\r\n        <div>\r\n          <span onClick={editModeHandler}>\r\n            Status: {props.status || \"Add status\"}\r\n          </span>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <input\r\n            onBlur={deactivateEditModeHandler}\r\n            autoFocus={true}\r\n            onChange={statusChangeHandler}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatus;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"profile__info\":\"profileInfo_profile__info__TR-WL\",\"profile__info__description\":\"profileInfo_profile__info__description__3LFCO\",\"profile__info__photo\":\"profileInfo_profile__info__photo__hMZqb\"};","import React from \"react\";\r\nimport ProfileContacts from \"./ProfileContacts\";\r\n\r\nfunction ProfileData({ profile, owner, editModeHandler }) {\r\n  const activateEditMode = () => {\r\n    editModeHandler();\r\n  };\r\n  return (\r\n    <div>\r\n      {owner && (\r\n        <div>\r\n          <button onClick={activateEditMode}>Edit</button>\r\n        </div>\r\n      )}\r\n      <div>\r\n        <b>Full Name: {profile.fullName}</b>\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job: {profile.lookingForAJob ? \"Yes\" : \"No\"}</b>\r\n      </div>\r\n      <div>\r\n        <b>About me: {profile.aboutMe}</b>\r\n      </div>\r\n      <div>\r\n        {profile.lookingForAJob && (\r\n          <b>Skills: {profile.lookingForAJobDescription}</b>\r\n        )}\r\n      </div>\r\n      {/* <div>\r\n        <b>Contacts</b>:\r\n        {Object.keys(profile.contacts).map((key) => {\r\n          return (\r\n            <ProfileContacts\r\n              key={key}\r\n              contactTitle={key}\r\n              contactValue={profile.contacts[key]}\r\n            />\r\n          );\r\n        })}\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileData;\r\n","import React from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport classes from \"./formStyles.module.scss\";\r\n\r\nconst ProfileDataForm = ({ submitHandler, profile }) => {\r\n  const validationsSchema = Yup.object().shape({\r\n    fullName: Yup.string()\r\n      .min(2, \"Too Short!\")\r\n      .max(20, \"Too Long!\")\r\n      .required(\"Required field\"),\r\n    aboutMe: Yup.string().min(2, \"Too Short!\").max(100, \"Too Long!\"),\r\n    lookingForAJobDescription: Yup.string()\r\n      .min(2, \"Too Short!\")\r\n      .max(100, \"Too Long!\"),\r\n  });\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{\r\n          fullName: profile.fullName,\r\n          lookingForAJob: false,\r\n          aboutMe: profile.aboutMe,\r\n          lookingForAJobDescription: profile.lookingForAJobDescription,\r\n        }}\r\n        onSubmit={submitHandler}\r\n        validationSchema={validationsSchema}\r\n      >\r\n        {({ errors, touched, status }) => (\r\n          <Form>\r\n            <label>Full Name</label>\r\n            <div>\r\n              <Field\r\n                name={\"fullName\"}\r\n                className={\r\n                  errors.fullName && touched.fullName\r\n                    ? classes.error__border\r\n                    : null\r\n                }\r\n              />\r\n            </div>\r\n            {errors.fullName && touched.fullName ? (\r\n              <p className={classes.error}>{errors.fullName}</p>\r\n            ) : null}\r\n            <div>\r\n              <Field type={\"checkbox\"} name={\"lookingForAJob\"} />\r\n              Looking for a job\r\n            </div>\r\n\r\n            <label>About me</label>\r\n            <div>\r\n              <Field\r\n                component=\"textarea\"\r\n                name={\"aboutMe\"}\r\n                className={\r\n                  errors.aboutMe && touched.aboutMe\r\n                    ? classes.error__border\r\n                    : null\r\n                }\r\n              />\r\n            </div>\r\n            {errors.aboutMe && touched.aboutMe ? (\r\n              <p className={classes.error}>{errors.aboutMe}</p>\r\n            ) : null}\r\n\r\n            <label>Skills</label>\r\n            <div>\r\n              <Field\r\n                component=\"textarea\"\r\n                name={\"lookingForAJobDescription\"}\r\n                className={\r\n                  errors.lookingForAJobDescription &&\r\n                  touched.lookingForAJobDescription\r\n                    ? classes.error__border\r\n                    : null\r\n                }\r\n              />\r\n            </div>\r\n            {errors.lookingForAJobDescription &&\r\n            touched.lookingForAJobDescription ? (\r\n              <p className={classes.error}>\r\n                {errors.lookingForAJobDescription}\r\n              </p>\r\n            ) : null}\r\n\r\n            {/* <label>Contacts</label>\r\n\r\n            <div>\r\n              {Object.keys(profile.contacts).map((key) => {\r\n                return (\r\n                  <div key={key}>\r\n                    <b>{key}: </b>\r\n                    <div>\r\n                      <Field\r\n                       \r\n                        onChange={contactHandler}\r\n                        placeholder={key}\r\n                        name={`contacts.${key}`}\r\n                        className={\r\n                          errors.contacts && touched.contacts\r\n                            ? classes.error__border\r\n                            : null\r\n                        }\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div> */}\r\n\r\n            {status ? <p className={classes.error}>{status.error}</p> : null}\r\n\r\n            <div>\r\n              <button type=\"submit\">Save</button>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileDataForm;\r\n","import React, { useState } from \"react\";\r\nimport PreLoader from \"../../UI/preloader/PreLoader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport avatar from \"../../../assets/image/user.png\";\r\nimport classes from \"./profileInfo.module.scss\";\r\nimport ProfileData from \"./ProfileData\";\r\nimport ProfileDataForm from \"../../Forms/ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({\r\n  profile,\r\n  status,\r\n  updateStatus,\r\n  owner,\r\n  savePhoto,\r\n  saveData,\r\n}) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const editModeHandler = () => {\r\n    setEditMode(true);\r\n  };\r\n  const choiseAvatarHandler = (e) => {\r\n    savePhoto(e.target.files[0]);\r\n  };\r\n\r\n  const submitHandler = (formData, submitProps) => {\r\n    saveData(formData, submitProps.setStatus);\r\n    setEditMode(false);\r\n  };\r\n\r\n  if (!profile) {\r\n    return <PreLoader />;\r\n  }\r\n  return (\r\n    <div>\r\n      <div className={classes.profile__info}>\r\n        <img\r\n          className={classes.profile__info__photo}\r\n          src={profile.photos.large || avatar}\r\n          alt=\"No Avatar\"\r\n        />\r\n        {owner && <input type={\"file\"} onChange={choiseAvatarHandler} />}\r\n      </div>\r\n      <ProfileStatus status={status} updateStatus={updateStatus} />\r\n      {editMode ? (\r\n        <ProfileDataForm profile={profile} submitHandler={submitHandler} />\r\n      ) : (\r\n        <ProfileData\r\n          profile={profile}\r\n          owner={owner}\r\n          editModeHandler={editModeHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport MyPostsContainer from \"../MyPosts/MyPostsContainer\";\r\nimport classes from \"./profile.module.scss\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = ({\r\n  profile,\r\n  status,\r\n  updateStatus,\r\n  owner,\r\n  savePhoto,\r\n  saveData,\r\n}) => {\r\n  return (\r\n    <main className={classes.profile}>\r\n      <div className={classes.profile__cover}>\r\n        <ProfileInfo\r\n          profile={profile}\r\n          status={status}\r\n          updateStatus={updateStatus}\r\n          owner={owner}\r\n          savePhoto={savePhoto}\r\n          saveData={saveData}\r\n        />\r\n      </div>\r\n      <MyPostsContainer />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { Component } from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { useMatch } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthNavigate } from \"../../hoc/authNavigate\";\r\nimport {\r\n  getProfileThunkCreator,\r\n  getProfileStatusThunkCreator,\r\n  updateProfileStatusThunkCreator,\r\n  savePhotoThunkCreator,\r\n  saveDataThunkCreator,\r\n} from \"../../redux/profileReducer\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends Component {\r\n  refreshProfile() {\r\n    let userId = this.props.match\r\n      ? this.props.match.params.userId\r\n      : this.props.authorizedUserId;\r\n    this.props.getProfileThunkCreator(userId);\r\n    this.props.getProfileStatusThunkCreator(userId);\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.refreshProfile();\r\n  };\r\n\r\n  componentDidUpdate = (prevProps) => {\r\n    if (this.props.match !== prevProps.match) {\r\n      this.refreshProfile();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        owner={this.props.match === null}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateProfileStatusThunkCreator}\r\n        savePhoto={this.props.savePhotoThunkCreator}\r\n        saveData={this.props.saveDataThunkCreator}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst ProfileURLMatch = (props) => {\r\n  const match = useMatch(\"/profile/:userId/\");\r\n  return <ProfileContainer {...props} match={match} />;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  withAuthNavigate,\r\n  connect(mapStateToProps, {\r\n    getProfileThunkCreator,\r\n    getProfileStatusThunkCreator,\r\n    updateProfileStatusThunkCreator,\r\n    savePhotoThunkCreator,\r\n    saveDataThunkCreator,\r\n  })\r\n)(ProfileURLMatch);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForNavigate = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthNavigate = (Component) => {\r\n  class navigateComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Navigate to={\"/login\"} />;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthNavigateComponent = connect(mapStateToPropsForNavigate)(\r\n    navigateComponent\r\n  );\r\n\r\n  return ConnectedAuthNavigateComponent;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"error\":\"formStyles_error__e9G6r\",\"error__border\":\"formStyles_error__border__70zrh\"};"],"names":["message","likeCount","className","classes","src","alt","validationsSchema","Yup","shape","post","min","max","submitHandler","initialValues","id","Date","now","onSubmit","validationSchema","errors","touched","placeholder","name","component","type","props","items","profilePage","posts","map","submitProps","addPost","resetForm","connect","state","newPostText","dispatch","addPostActionCreator","MyPosts","useState","editMode","setEditMode","status","setStatus","useEffect","onBlur","updateStatus","autoFocus","onChange","e","statusValue","target","value","onClick","profile","owner","editModeHandler","fullName","lookingForAJob","aboutMe","lookingForAJobDescription","required","error","savePhoto","saveData","photos","large","avatar","files","formData","PreLoader","ProfileContainer","componentDidMount","refreshProfile","componentDidUpdate","prevProps","match","userId","this","params","authorizedUserId","getProfileThunkCreator","getProfileStatusThunkCreator","updateProfileStatusThunkCreator","savePhotoThunkCreator","saveDataThunkCreator","Component","compose","withAuthNavigate","auth","isAuth","useMatch","mapStateToPropsForNavigate","navigateComponent","to","React"],"sourceRoot":""}